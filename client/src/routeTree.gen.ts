/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as BrowseImport } from './routes/browse'
import { Route as AddImport } from './routes/add'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SearchLazyImport = createFileRoute('/search')()
const BrowseLazyImport = createFileRoute('/browse')()
const AddLazyImport = createFileRoute('/add')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SearchRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search').then((d) => d.Route))

const BrowseRoute = BrowseLazyImport.update({
  path: '/browse',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/browse').then((d) => d.Route))

const AddRoute = AddLazyImport.update({
  path: '/add',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/add').then((d) => d.Route))

const IndexRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddLazyImport
      parentRoute: typeof rootRoute
    }
    '/browse': {
      id: '/browse'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof BrowseLazyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AddRoute,
  BrowseRoute,
  SearchRoute,
})

/* prettier-ignore-end */